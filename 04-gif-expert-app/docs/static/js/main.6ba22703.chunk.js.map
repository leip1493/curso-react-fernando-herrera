{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","value","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","image","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","key","CATEGORIES","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAAAC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,SAfG,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACrCT,EAAcS,IAcoCA,MAAOV,MCnBhDY,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACT,mCACNN,EAFe,uDACT,mCADS,cAEgDO,UACnEF,GAHmB,sBAKEG,MAAMR,GALR,cAKfS,EALe,gBAMEA,EAASC,OANX,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAK,MAAK,CAC9BhB,GAAIgB,EAAMhB,GACVC,MAAOe,EAAMf,MACbC,IAAKc,EAAMC,OAAOC,iBAAiBhB,QAVhB,kBAYdY,GAZc,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAAA,GAAa,IAAD,EACZrB,mBAAS,CACjC4B,KAAM,GACNM,SAAS,IAH2B,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAAAV,GACrBQ,EAAS,CACPR,OACAM,SAAS,SAGZ,CAACb,IAEGc,EDZmBI,CAAalB,GAA/BO,EAD+B,EAC/BA,KAAMM,EADyB,EACzBA,QAEd,OACE,oCACE,wBAAIjB,UAAU,qCAAqCI,EAAnD,KACCa,GAAW,uBAAGjB,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACZW,EAAKC,KAAI,SAAAW,GAAG,OACX,kBAAC,EAAD,eAAaC,IAAKD,EAAI1B,IAAQ0B,UEVlCE,EAAa,CAAC,UAEPC,EAAe,WAAO,IAAD,EACI3C,mBAAS0C,GADb,mBACzBlC,EADyB,KACbT,EADa,KAGhC,OACE,oCACE,4CAEA,kBAAC,EAAgB,CAAEA,kBAEnB,6BAEA,4BACGS,EAAWqB,KAAI,SAAAR,GAAQ,OACtB,kBAAC,EAAD,eAASoB,IAAKpB,GAAc,CAAEA,oBCdxCuB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.6ba22703.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { value } }) => {\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" onChange={handleInputChange} value={inputValue} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async category => {\r\n  const key = \"EsvslGEDLoMKwGHm6UFH1qMeoTmXYAhr\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifs = data.map(image => ({\r\n    id: image.id,\r\n    title: image.title,\r\n    url: image.images.downsized_medium.url\r\n  }));\r\n  return gifs;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { gifs, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category} </h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {gifs.map(gif => (\r\n          <GifGridItem key={gif.id} {...gif} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = category => {\r\n  const [state, setState] = useState({\r\n    gifs: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(gifs => {\r\n      setState({\r\n        gifs,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst CATEGORIES = [\"Naruto\"];\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(CATEGORIES);\r\n\r\n  return (\r\n    <>\r\n      <h2>GidExpertApp</h2>\r\n\r\n      <AddCategory {...{ setCategories }} />\r\n\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map(category => (\r\n          <GifGrid key={category} {...{ category }} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}